In file included from src/radix.h:9:0,
                 from src/radix.cc:8:
/usr/include/c++/5/functional: In instantiation of ‘struct std::_Bind_simple<void (*(std::vector<unsigned int>, int))(std::vector<unsigned int>&, int)>’:
/usr/include/c++/5/thread:137:59:   required from ‘std::thread::thread(_Callable&&, _Args&& ...) [with _Callable = void (&)(std::vector<unsigned int>&, int); _Args = {std::vector<unsigned int, std::allocator<unsigned int> >&, int&}]’
src/radix.cc:78:68:   required from here
/usr/include/c++/5/functional:1505:61: error: no type named ‘type’ in ‘class std::result_of<void (*(std::vector<unsigned int>, int))(std::vector<unsigned int>&, int)>’
       typedef typename result_of<_Callable(_Args...)>::type result_type;
                                                             ^
/usr/include/c++/5/functional:1526:9: error: no type named ‘type’ in ‘class std::result_of<void (*(std::vector<unsigned int>, int))(std::vector<unsigned int>&, int)>’
         _M_invoke(_Index_tuple<_Indices...>)
         ^
